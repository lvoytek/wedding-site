
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components
@use 'styles' as *;

// Include the common styles for Angular Material.
@include mat.core();

$ll-dusty-blue-palette: (
  50: #eaeef4,
  100: #ccd6de,
  200: #adbac6,
  300: #8d9eae,
  400: #75899c,
  500: #5e758a,
  600: #516779,
  700: #425363,
  800: #33414e,
  900: #212c36,
  contrast: (
    50: rgba($ll-black, 1),
    100: rgba($ll-black, 1),
    200: rgba($ll-black, 1),
    300: rgba($ll-black, 1),
    400: rgba($ll-black, 1),
    500: rgba($ll-black, 1),
    600: white,
    700: white,
    800: white,
    900: white
  )
);

$ll-green-palette: (
 50: #e8f2ec,
 100: #c8ded0,
 200: #a8cab4,
 300: #8eb59a,
 400: #7fa589,
 500: #75957c,
 600: #6c8871,
 700: #627865,
 800: #58685a,
 900: #474b47,
 contrast: (
   50: rgba($ll-black, 1),
   100: rgba($ll-black, 1),
   200: rgba($ll-black, 1),
   300: rgba($ll-black, 1),
   400: rgba($ll-black, 1),
   500: rgba($ll-black, 1),
   600: rgba($ll-black, 1),
   700: rgba($ll-black, 1),
   800: white,
   900: white
 )
);

$ll-burgundy-palette: (
  50: #fceaea,
  100: #e6cdd0,
  200: #ceaeb3,
  300: #b68e94,
  400: #a3747c,
  500: #915c65,
  600: #83535c,
  700: #724750,
  800: #613b46,
  900: #4f2e39,
  contrast: (
    50: rgba($ll-black, 1),
    100: rgba($ll-black, 1),
    200: rgba($ll-black, 1),
    300: rgba($ll-black, 1),
    400: rgba($ll-black, 1),
    500: white,
    600: white,
    700: white,
    800: white,
    900: white
  )
);

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$client-primary: mat.define-palette($ll-green-palette, 600);
$client-accent: mat.define-palette($ll-burgundy-palette, 800);

// The warn palette is optional (defaults to red).
$client-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$client-theme: mat.define-light-theme((
  color: (
    primary: $client-primary,
    accent: $client-accent,
    warn: $client-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($client-theme);


html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }
